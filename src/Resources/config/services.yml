services:
    # Remove the public: true default once DI is implemented throughout the StepUp applications. See Pivotal #138225085
    _defaults:
        public: true

    logger:
        alias: 'monolog.logger'
        public: true

    surfnet_stepup.json_convertible_param_converter:
        class: Surfnet\StepupBundle\Request\JsonConvertibleParamConverter
        arguments:
            - "@validator"
        tags:
            - { name: request.param_converter, priority: -1, converter: surfnet_stepup.json_convertible }
    Surfnet\StepupBundle\Request\JsonConvertibleParamConverter:
        alias: surfnet_stepup.json_convertible_param_converter

    surfnet_stepup.listener.bad_json_request_exception_listener:
        class: Surfnet\StepupBundle\EventListener\BadJsonRequestExceptionListener
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }
    Surfnet\StepupBundle\EventListener\BadJsonRequestExceptionListener:
        alias: surfnet_stepup.listener.bad_json_request_exception_listener

    surfnet_stepup.request.request_id:
        public: true
        class: Surfnet\StepupBundle\Request\RequestId
        arguments:
            - "@surfnet_stepup.request.request_id_generator"
    Surfnet\StepupBundle\Request\RequestId:
        alias: surfnet_stepup.request.request_id

    surfnet_stepup.request.request_id_generator:
        public: false
        class: Surfnet\StepupBundle\Request\RandomRequestIdGenerator
    Surfnet\StepupBundle\Request\RandomRequestIdGenerator:
        alias: surfnet_stepup.request.request_id_generator

    surfnet_stepup.listener.request_id_request_response_listener:
        class: Surfnet\StepupBundle\EventListener\RequestIdRequestResponseListener
        arguments:
            - "@surfnet_stepup.request.request_id"
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }
    Surfnet\StepupBundle\EventListener\RequestIdRequestResponseListener:
        alias: surfnet_stepup.listener.request_id_request_response_listener

    surfnet_stepup.guzzle.request_id_injector:
        class: Surfnet\StepupBundle\Guzzle\Middleware\GuzzleRequestIdInjector
        arguments:
            - "@surfnet_stepup.request.request_id"
    Surfnet\StepupBundle\Guzzle\Middleware\GuzzleRequestIdInjector:
        alias: surfnet_stepup.guzzle.request_id_injector

    surfnet_stepup.monolog.request_id_processor:
        class: Surfnet\StepupBundle\Monolog\Processor\RequestIdProcessor
        arguments:
            - "@surfnet_stepup.request.request_id"
        tags:
            - { name: monolog.processor }

    surfnet_stepup.monolog.application_name_processor:
        class: Surfnet\StepupBundle\Monolog\Processor\ApplicationNameProcessor
        arguments: ["%logging.application_name%"]
        tags:
            - { name: monolog.processor }

    surfnet_stepup.monolog.server_name_processor:
        class: Surfnet\StepupBundle\Monolog\Processor\ServerNameProcessor
        arguments: [ "@request_stack" ]
        tags:
            - { name: monolog.processor }

    surfnet_stepup.monolog.art_processor:
        class: Surfnet\StepupBundle\Monolog\Processor\ArtProcessor
        tags: [{ name: monolog.processor }]

    surfnet_stepup.monolog.json_formatter:
        class: Surfnet\StepupBundle\Monolog\Formatter\JsonFormatter

    surfnet_stepup.listener.primary_log_exception_listener:
        class: Surfnet\StepupBundle\EventListener\CannotWriteToPrimaryLogExceptionExceptionListener
        tags:
            - { name: kernel.event_subscriber }

    surfnet_stepup.service.loa_resolution:
        class: Surfnet\StepupBundle\Service\LoaResolutionService
    Surfnet\StepupBundle\Service\LoaResolutionService:
        alias: surfnet_stepup.service.loa_resolution

    surfnet_stepup.service.gateway_api_sms:
        public: false
        class: Surfnet\StepupBundle\Service\GatewayApiSmsService
        arguments:
            - "@surfnet_stepup.guzzle.gateway_api"
            - "@logger"

    surfnet_stepup.service.sms_second_factor:
        class: Surfnet\StepupBundle\Service\SmsSecondFactorService
        arguments:
            - '' # SMS service set in extension
            - "@surfnet_stepup.service.challenge_handler"
            - '' # Originator set in extension
    Surfnet\StepupBundle\Service\SmsSecondFactorService:
        alias: surfnet_stepup.service.sms_second_factor

    Surfnet\StepupBundle\Service\SmsRecoveryTokenService:
        arguments:
            - '' # SMS service set in extension
            - "@surfnet_stepup.service.challenge_handler"
            - '' # Originator set in extension

    surfnet_stepup.service.challenge_handler:
        public: false
        class: Surfnet\StepupBundle\Service\SmsSecondFactor\SessionSmsVerificationStateHandler
        arguments:
            - "@session"
            - "Surfnet/Stepup/SecondFactor/Sms:challenge"
            - {} # OTP expiry interval
            - 0  # Maximum OTP requests

    surfnet_stepup.service.second_factor_type:
        class: Surfnet\StepupBundle\Service\SecondFactorTypeService
        arguments:
            - "%enabled_generic_second_factors%"
    Surfnet\StepupBundle\Service\SecondFactorTypeService:
        alias: surfnet_stepup.service.second_factor_type

    surfnet_stepup.service.second_factor_type_translator:
        class: Surfnet\StepupBundle\Service\SecondFactorTypeTranslationService
        arguments:
            - "@surfnet_stepup.provider.collection"
            - "@translator"
    Surfnet\StepupBundle\Service\SecondFactorTypeTranslationService:
        alias: surfnet_stepup.service.second_factor_type_translator

    surfnet_stepup.guzzle.gateway_api:
        public: false
        class: GuzzleHttp\Client
        arguments:
            - {} # Set from the extension

    surfnet_stepup.form.choice_list.locales:
        class: Surfnet\StepupBundle\Form\ChoiceList\LocaleChoiceList
        arguments:
            - [] # See Extension
            - "@request_stack"
    Surfnet\StepupBundle\Form\ChoiceList\LocaleChoiceList:
        alias: surfnet_stepup.form.choice_list.locales

    surfnet_stepup.form.switch_locale:
        class: Surfnet\StepupBundle\Form\Type\SwitchLocaleType
        arguments:
            - "@surfnet_stepup.form.choice_list.locales"
            - "@router"
        tags:
            - { name: form.type, alias: stepup_switch_locale }

    surfnet_stepup.twig.locale_extension:
        class: Surfnet\StepupBundle\Twig\LocaleExtension
        arguments: [ "@form.factory" ]
        tags:
            - { name: twig.extension }

    surfnet_stepup.listener.cache_control_header_response:
        class: Surfnet\StepupBundle\EventListener\CacheControlHeaderResponseListener
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }

    surfnet_stepup.listener.exception:
        class: Surfnet\StepupBundle\EventListener\ExceptionListener
        arguments:
            - '%twig.exception_listener.controller%'
            - '@logger'
        tags:
            # It is very important this listener has a priority higher than the default exception listener,
            # and ideally lower than the profiler listener (so exceptions show up in the toolbar).
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: -128 }

    surfnet_stepup.locale_cookie_helper:
        class: Surfnet\StepupBundle\Http\CookieHelper
        arguments:
          - "@surfnet_stepup.locale_cookie_settings"
    Surfnet\StepupBundle\Http\CookieHelper:
        alias: surfnet_stepup.locale_cookie_helper

    surfnet_stepup.locale_cookie_settings:
        public: false
        class: Symfony\Component\HttpFoundation\Cookie
        # Set from the extension

    surfnet_stepup.configurator.guzzle_request_id_configurator:
        class: Surfnet\StepupBundle\DependencyInjection\Configurator\GuzzleClientRequestIdConfigurator
        arguments:
            - "@surfnet_stepup.guzzle.request_id_injector"
    Surfnet\StepupBundle\DependencyInjection\Configurator\GuzzleClientRequestIdConfigurator:
        alias: surfnet_stepup.configurator.guzzle_request_id_configurator

    surfnet_stepup.guzzle.handler_stack:
        class: GuzzleHttp\HandlerStack
        factory: ['GuzzleHttp\HandlerStack', create]
    GuzzleHttp\HandlerStack:
        alias: surfnet_stepup.guzzle.handler_stack

    surfnet_stepup.provider.collection:
        class: Surfnet\StepupBundle\Value\Provider\ViewConfigCollection
    Surfnet\StepupBundle\Value\Provider\ViewConfigCollection:
        alias: surfnet_stepup.provider.collection

    surfnet_stepup.registration_expiration_helper:
        class: Surfnet\StepupBundle\DateTime\RegistrationExpirationHelper
    Surfnet\StepupBundle\DateTime\RegistrationExpirationHelper:
        alias: surfnet_stepup.registration_expiration_helper
